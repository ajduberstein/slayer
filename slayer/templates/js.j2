{{ viewport }};

var layers = [];

{% if color_lookup %}
const COLOR_LOOKUP = {{color_lookup}};
{% endif %}

function getLayers() {
  return [
    {{ layers }}
  ];
}


{% if blend %}
{% include 'blend_js.j2' %}
{% endif %}

{% if add_tooltip %}
{% include 'tooltip.j2' %}
{% endif %}

var deckgl = new deck.DeckGL({
  container: 'map-container',
  mapboxApiAccessToken: '{{ mapbox_api_key }}',
  initialViewState: INITIAL_VIEW_STATE,
{% if is_orbit_view %}
  views: [new OrbitView()],
{% endif %}
  onViewportChange: onViewportChange,
{% if blend %}
  onWebGLInitialized: webGLInit || None,
{% endif %}
  layers: layers,
{% if add_tooltip %}
  onLayerHover: onHover,
  onLayerClick: onClick,
{% endif %}
});

function onViewportChange(viewport) {
  console.log(JSON.stringify(viewport));
  deckgl.setProps({viewState: viewport});
}

function init() {
  layers = getLayers();
  deckgl.setProps({layers});
}

init();
