{{ viewport }};

var layers = [];

function getLayers() {
  return [
    {{ layers }}
  ];
}


{% if blend %}
{% include 'blend_js.j2' %}
{% endif %}

{% if add_tooltip %}
{% include 'tooltip.j2' %}
{% endif %}

var deckgl = new deck.DeckGL({
  container: 'map-container',
{% if not is_xyz_view  %}
  mapboxApiAccessToken: '{{ mapbox_api_key }}',
{% endif  %}
  initialViewState: INITIAL_VIEW_STATE,
  views: [new MapView()],
  onViewportChange: onViewportChange,
{% if blend %}
  onWebGLInitialized: webGLInit || None,
{% endif %}
  layers: layers,
{% if add_tooltip %}
  onLayerHover: onHover,
  onLayerClick: onClick,
{% endif %}
});


function onViewportChange(viewport) {
  deckgl.setProps({viewState: viewport});
}

function init() {
  layers = getLayers();
  deckgl.setProps({layers});
}

init();
